// Generated by CoffeeScript 1.9.2
var Caravel;

Caravel = (function() {
  Caravel["default"] = null;

  Caravel.buses = [];

  function Caravel(name) {
    this.name = name;
    this.subscribers = [];
    this._post("CaravelInit", null);
  }

  Caravel.prototype._post = function(eventName, data) {
    var iframe, src;
    iframe = document.createElement('iframe');
    src = "caravel@" + this.name + "@" + eventName;
    if (data != null) {
      src += "@" + data;
    }
    iframe.setAttribute('src', src);
    document.documentElement.appendChild(iframe);
    return iframe.parentNode.removeChild(iframe);
  };

  Caravel.prototype.getName = function() {
    return this.name;
  };

  Caravel.prototype.post = function(name, data) {
    return this._post(name, data);
  };

  Caravel.prototype.register = function(name, callback) {
    return this.subscribers.push({
      name: name,
      callback: callback
    });
  };

  Caravel.prototype.raise = function(name, data) {
    var e, i, len, parsedData, ref, results;
    if (data instanceof Array || data instanceof Object) {
      parsedData = data;
    } else {
      parsedData = JSON.parse(data);
    }
    ref = this.subscribers;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      e = ref[i];
      if (e.name === name) {
        results.push(e.callback(name, parsedData));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  Caravel.getDefault = function() {
    if (Caravel["default"] == null) {
      Caravel["default"] = new Caravel("default");
    }
    return Caravel["default"];
  };

  Caravel.get = function(name) {
    var b, i, len, ref;
    ref = Caravel.buses;
    for (i = 0, len = ref.length; i < len; i++) {
      b = ref[i];
      if (b.getName() === name) {
        return b;
      }
    }
    b = new Caravel(name);
    Caravel.buses.push(b);
    return b;
  };

  return Caravel;

})();
